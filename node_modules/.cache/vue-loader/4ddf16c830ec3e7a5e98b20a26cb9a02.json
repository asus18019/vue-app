{"remainingRequest":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\src\\views\\About.vue?vue&type=style&index=0&id=039c5b43&lang=css","dependencies":[{"path":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\src\\views\\About.vue","mtime":1619606904202},{"path":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1616796459000},{"path":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLnJlZCB7CiAgICBjb2xvcjogcmVkOwogIH0KICBidXR0b24gewogICAgbWFyZ2luOiAyMHB4OwogIH0K"},{"version":3,"sources":["C:\\Users\\ВИКТОР\\Documents\\Projects\\vue-second-app\\src\\views\\About.vue"],"names":[],"mappings":";EAsGE,CAAC,CAAC,CAAC,EAAE;IACH,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACZ;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACd","file":"C:/Users/ВИКТОР/Documents/Projects/vue-second-app/src/views/About.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"about\">\n    <input\n        v-model=\"inputValue\"\n    />\n    <h3>Hello {{ setText }}</h3>\n    <hr/>\n    <button\n        @click=\"fetchDogs\"\n    >Fetch dogs</button>\n    <button @click=\"clearBreeds\">Clear breeds</button>\n    <div v-for=\"breed in breeds\">\n      <p>{{ breed.name }}</p>\n      <p class=\"red\"\n         v-if=\"breed.subBreeds.length\"\n         v-for=\"subBreed in breed.subBreeds\"\n      >{{ subBreed }}</p>\n    </div>\n    <hr/>\n    <div>\n      <button\n          @click=\"randomBreed\"\n      >Random breed</button>\n      <div v-for=\"breed in randomBreedVar\">\n        <p>{{ breed.name }}</p>\n        <p class=\"red\"\n           v-if=\"breed.subBreeds.length\"\n           v-for=\"subBreed in breed.subBreeds\"\n        >{{ subBreed }}</p>\n      </div>\n    </div>\n  </div>\n  <hr/>\n  <div>\n    <button\n      @click=\"addRandom\"\n    >Add random breed</button>\n    <button\n        @click=\"deleteRandomBreed\"\n    >Delete random breed</button>\n    <div\n        v-for=\"breed in randomBreeds\"\n    >{{breed.name}}</div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      inputValue: '',\n      breeds: [],\n      randomBreedVar: [],\n      randomBreeds: []\n    }\n  },\n  methods: {\n    convert(data){\n      return Object.entries(data).map(item => ({name: item[0], subBreeds: item[1]}))\n    },\n    fetchDogs(){\n      fetch('https://dog.ceo/api/breeds/list/all')\n          .then(response => response.json())\n          .then(json => this.breeds = this.convert(json.message))\n    },\n    randomBreed(){\n      fetch('https://dog.ceo/api/breeds/list/all/random')\n        .then(response => response.json())\n        .then(json => this.randomBreedVar = this.convert(json.message))\n    },\n    clearBreeds(){\n      this.breeds = []\n    },\n    addRandom(){\n      fetch('https://dog.ceo/api/breeds/list/all/random')\n          .then(response => response.json())\n          .then(json => this.randomBreeds = this.randomBreeds.concat(this.convert(json.message)))\n    },\n    randomNumberGenerator(max){\n      return Math.floor(Math.random() * max)\n    },\n    deleteRandomBreed(){\n      let number = this.randomNumberGenerator(this.randomBreeds.length)\n      this.randomBreeds = [\n        ...this.randomBreeds.slice(0, number),\n        ...this.randomBreeds.slice(number + 1)\n      ];\n    }\n  },\n  computed: {\n    setText(){\n      if(this.inputValue.trim()){\n        return this.inputValue\n      } else {\n        return \"незнакомец\"\n      }\n    }\n  }\n}\n</script>\n\n<style>\n  .red {\n    color: red;\n  }\n  button {\n    margin: 20px;\n  }\n</style>"]}]}